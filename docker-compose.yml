# =============================================================================
# EvalPoint Educational Platform - Production Docker Compose Configuration
# Optimized for educational platforms with security, scalability, and reliability
# =============================================================================


# =============================================================================
# Networks - Secure container communication
# =============================================================================
networks:
  evalpoint-network:
    driver: bridge
    name: evalpoint-network
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =============================================================================
# Volumes - Persistent data storage
# =============================================================================
volumes:
  mongodb-data:
    name: evalpoint-mongodb-data
    driver: local
  
  mongodb-logs:
    name: evalpoint-mongodb-logs
    driver: local
  
  backend-logs:
    name: evalpoint-backend-logs
    driver: local

  email-storage:
    name: evalpoint-email-storage
    driver: local

# =============================================================================
# Services Configuration
# =============================================================================
services:
  
  # ===========================================================================
  # MongoDB Database Service
  # Educational data storage with enhanced security and performance
  # ===========================================================================
  mongodb:
    image: mongo:7.0.4
    container_name: evalpoint-mongodb
    restart: unless-stopped
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-evalpoint}
      MONGO_INITDB_USERNAME: ${MONGODB_USERNAME:-evalpoint_user}
      MONGO_INITDB_PASSWORD: ${MONGODB_PASSWORD}
    
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    
    volumes:
      - mongodb-data:/data/db
      - mongodb-logs:/var/log/mongodb
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./docker/mongodb/mongod.conf:/etc/mongod.conf:ro
    
    networks:
      - evalpoint-network
    
    command: ["mongod", "--config", "/etc/mongod.conf"]
    
    # Health check for educational data availability
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    
    # Resource limits for educational workloads
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=mongodb,platform=educational"

  # ===========================================================================
  # Backend Authentication Service
  # Educational platform backend with comprehensive security
  # ===========================================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      args:
        NODE_VERSION: 18.17.0
    
    container_name: evalpoint-backend
    restart: unless-stopped
    
    environment:
      NODE_ENV: production
      PORT: 5000
      
      # Database configuration
      MONGODB_URI: mongodb://${MONGODB_USERNAME:-evalpoint_user}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE:-evalpoint}?authSource=${MONGODB_DATABASE:-evalpoint}
      
      # Authentication configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      
      # Security configuration
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-15}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      
      # Educational platform configuration
      PLATFORM_NAME: ${PLATFORM_NAME:-EvalPoint}
      PLATFORM_URL: ${PLATFORM_URL:-https://evalpoint.com}
      
      # Email storage configuration
      EMAIL_STORAGE_PATH: /app/data/emails
      
      # Compliance settings
      COPPA_COMPLIANCE: ${COPPA_COMPLIANCE:-true}
      FERPA_COMPLIANCE: ${FERPA_COMPLIANCE:-true}
      GDPR_COMPLIANCE: ${GDPR_COMPLIANCE:-true}
    
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    
    volumes:
      - backend-logs:/app/logs
      - email-storage:/app/data/emails
    
    networks:
      - evalpoint-network
    
    depends_on:
      mongodb:
        condition: service_healthy
    
    # Health check for educational service availability
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits for educational backend
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=backend,platform=educational"

  # ===========================================================================
  # Nginx Reverse Proxy (Optional - for production deployments)
  # Load balancing and SSL termination for educational platform
  # ===========================================================================
  nginx:
    image: nginx:1.25.3-alpine
    container_name: evalpoint-nginx
    restart: unless-stopped
    
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    
    networks:
      - evalpoint-network
    
    depends_on:
      backend:
        condition: service_healthy
    
    # Health check for proxy availability
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nginx,platform=educational"

  # ===========================================================================
  # Redis Cache Service (Optional - for session management)
  # High-performance caching for educational platform
  # ===========================================================================
  redis:
    image: redis:7.2.3-alpine
    container_name: evalpoint-redis
    restart: unless-stopped
    
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    
    ports:
      - "${REDIS_PORT:-6379}:6379"
    
    volumes:
      - ./data/redis:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    
    networks:
      - evalpoint-network
    
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]
    
    # Health check for cache availability
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    
    # Resource limits for cache service
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    
    # Logging configuration
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
        labels: "service=redis,platform=educational"

# =============================================================================
# Development and Testing Overrides
# =============================================================================
# To use development configuration:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

# To use testing configuration:
# docker-compose -f docker-compose.yml -f docker-compose.test.yml up